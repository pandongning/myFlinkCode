package cn._51doit.flink.day04;

import cn._51doit.flink.utils.FlinkUtilsV1;
import org.apache.flink.api.common.serialization.SimpleStringSchema;
import org.apache.flink.streaming.api.datastream.AsyncDataStream;
import org.apache.flink.streaming.api.datastream.DataStream;
import org.apache.flink.streaming.api.datastream.SingleOutputStreamOperator;

import java.util.concurrent.TimeUnit;

public class AsyncQueryActivityLocation {

    public static void main(String[] args) throws Exception {

        DataStream<String> lines = FlinkUtilsV1.createKafkaStream(args, new SimpleStringSchema());

        //SingleOutputStreamOperator<ActivityBean> beans = lines.map(new AsyncGeoToActivityBeanFunction());

        // unorderedWaits表示无序的 不按照请求的顺序 谁先返回谁在前面
//        3000表示如果查询的结果超过3000毫秒。还没有返回则失败
//        10表示最多向服务端发起10个并发的请求连接。其不能大于服务端设置的.setMaxConnTotal(20)
        SingleOutputStreamOperator<ActivityBean> result = AsyncDataStream.unorderedWait(lines, new AsyncGeoToActivityBeanFunction(), 3000,
                TimeUnit.MILLISECONDS, 10
        );

        result.print();

        FlinkUtilsV1.getEnv().execute("QueryActivityName");

    }
}
